use st1
go
DECLARE

@DTINI CHAR(10),
@DTFIM CHAR(10)

--AS
-- DROP TABLE #DMED DROP TABLE #BOSS

SET @DTINI = '01/01/2011'
SET @DTFIM = '31/12/2011'

SET DATEFORMAT DMY
DECLARE @ANO INT
SET @ANO = SUBSTRING(@DTINI,7,4)

SELECT  
    T.CODIGO TPDOC, T.DESCRICAO,
    C.NOME AS NM_CONTRATANTE,
    C.CGC_CPF,
    convert(datetime,NULL) DT_NASCIMENTO, -- CONTRATANTE NAO TEM DT DE NASCIMENTO MAS NO REGISTRO TOP DO DMED NAO PRECISA DE DATA DE NASCIMENTO, TÁ AKI PARA COMPATIBILIDADE NO UNION
	R.TIPO_DOCUMENTO,
    T.DESCRICAO AS DSTPDOCUMENTO,
	R.VALOR_PAGO, 
	R.DATA_PAGAMENTO ,
	R.CODIGO_CONTRATANTE,
	R.CODIGO_USUARIO, 
	ISNULL(R.DTINCLUSAO,DATA_EMISSAO) DTINCLUSAO,
    CAST(0 AS INT) QTUSU,
    CAST(0 AS SMALLMONEY) VRUNIT,
    R.ORCAMENTO,    
    C.CODIGO,
    C.CODIGO AS CD_CONTRATANTE,
    'M' TIPO,
    C.CGC_CPF CPF_ORDENACAO, -- SEGUNDO DMED TEM QUE ORDENAR POR CPF
    CAST(0 AS INT) CD_TITULAR, -- NAO SE APLICA AKI, SOMENTE NO SELECT DE UNION
    'A' AS LG_TITULAR -- A TITULAR, B DEPENDENTE. COMO TÁ FAZENDO UNION DA CONTRATANTE(MENSAILDADES) COM USUARIO(ORÇAMENTOS E MANUTENÇÃO)
                   -- DEFINE QUE OS REGISTROS DE MENSALIDADE DO CONTRATANTE SÃO DO TITULAR, E ORÇAMENTOS E MANUTENÇÕES , DEPENDE DO GRAU
                   -- A GABI DEFINIU QUE PARAA MENSALIDADE MANDA TUDO NO NOME DO TITULAR, E PARA MANUTENÇÃO E ORÇAMENTOS MANDA
                   -- NO NOME DE QUEM FEZ, SE FOR  TITULAR MANDA PARA O TITULAR(REGISTRO TOP DO DMED) E SE FOR DEPENDENTE MANDA PARA DEPENDETE(REGISTRO DTOP DO DMED)


INTO #DMED

FROM 
	RECEBER R, 
	TIPODOCUMENTO T,
    CONTRATANTE C,
    PLANO P

WHERE 
	     T.CODIGO = R.TIPO_DOCUMENTO 
        AND C.CODIGO  = R.CODIGO_CONTRATANTE
        AND P.CODIGO  = C.PLANO
	AND DATA_PAGAMENTO BETWEEN @DTINI AND @DTFIM
	AND VALOR_PAGO > 0 -- SEGUNDO GABI SOMENTE LISTA QUEM PAGOU NO MES..
    --AND P.FIS_JUR = 'Física' -- SEGUNDO GABI SOMENTE PESSOA FÍSICA..
    AND C.EMPRESA = 0

--    AND T.CODIGO = 1 -- MENSALIDADE

---AND T.CODIGO IN (1,4, 9,10,11,14,15,16,18,21,23,26)
 
 and T.CODIGO IN(select CODIGO from TipoDocumento where Classificacao = 'Mensalidade')
 
-- ATUALIZA A DT DE NASCIMENTO PARA FAZER GROUP BY COM REGISTROS DE ORÇAMENTO E MANUT.

UPDATE #DMED SET  #DMED.DT_NASCIMENTO = U.DATA_NASCIMENTO FROM USUARIO U WHERE #DMED.CD_CONTRATANTE = U.CODIGO AND U.GRAU_PARENTESCO = 1 
AND SUBSTRING(#DMED .NM_CONTRATANTE,1,3) = SUBSTRING(U.NOME,1,3)


--select * from #dmed where not exists(select * from usuario u WHERE #DMED.CODIGO = U.CODIGO AND U.GRAU_PARENTESCO = 1 )

-- INSERI OS REGISTROS DE MANUTENÇÃO E ORÇAMENTO, NESSE CASO NAO FILTRA SE EH PJ OU PF, POIS TODO ORÇAMENTO E MANUTENÇÃO
-- SÃO PAGOS PELA POSSA FISICA, INDEPENDETE SE O CONTRATANTE EH OU NAO PJ.(SEGUNDO GABI)

-- OBS: NO INICIO O DMED ENVIADO SERIA ASSIM, MENSALIDADE IRIA ENVIAR PARA O CONTRATANTE PF SEMPRE, JÁ ORÇAMENTO IRIA ENVIAR NO CPF DE QUEM FEZ(GERANDO O REGISTRO DTOP NO DMED)
-- SO QUE NO FIM DA RETA DECIDIRAM ENVIAR TUDO NO NOME DO TITULAR ,POIS O RECIDO DE IR SAI TUDO NO NOME DO TITULAR E ELIAS E CAE FICARAM COM RECEIO DE DAR PROBLEMA PARA
-- OS CLIENTES POIS MUITOS LANÇARAM NO IR O VALOR DO RELATORIO DE DECALRAÇÃO DE IR DA MT. ABAIXO FICOU COMENTADO NA FRENTE DE CADA CAMPO COMO TAVA PARA ENVIAR O DTOP.
-- CASO EM ENVIOS FUTUROS DECIDA ENVIAR O DTOP BASTA TROCAR.

INSERT INTO #DMED

SELECT  
    T.CODIGO TPDOC, T.DESCRICAO,
    C.NOME AS NM_CONTRATANTE, --U.NOME AS NM_CONTRATANTE,
    C.CGC_CPF, --U.CPF as CGC_CPF, 
    U.DATA_NASCIMENTO AS DT_NASCIMENTO,
	R.TIPO_DOCUMENTO,
    T.DESCRICAO AS DSTPDOCUMENTO,
	R.VALOR_PAGO, 
	R.DATA_PAGAMENTO ,
	R.CODIGO_CONTRATANTE,
	R.CODIGO_USUARIO, 
	ISNULL(R.DTINCLUSAO,DATA_EMISSAO) DTINCLUSAO,
    CAST(0 AS INT) QTUSU,
    CAST(0 AS SMALLMONEY) VRUNIT,
    R.ORCAMENTO,
    C.CODIGO CODIGO, --U.CODIGO_COMPLETO CODIGO,
    C.CODIGO AS CD_CONTRATANTE, --U.CODIGO AS CD_CONTRATANTE,
    'O' TIPO,
	C.CGC_CPF CPF_ORDENACAO, -- SEGUNDO DMED TEM QUE ORDENAR POR CPF
    CAST(0 AS INT) CD_TITULAR,
    'A' LG_TITULAR /*CASE U.GRAU_PARENTESCO WHEN 1 THEN 'A' ELSE 'B' END AS LG_TITULAR*/



FROM 
	RECEBER R

INNER JOIN	TIPODOCUMENTO T 
ON
   T.CODIGO = R.TIPO_DOCUMENTO 

INNER JOIN USUARIO U 
ON
   U.CODIGO_COMPLETO = R.CODIGO_USUARIO

INNER JOIN CONTRATANTE C
ON
    C.CODIGO  = U.CODIGO

WHERE 
	        
	    DATA_PAGAMENTO BETWEEN @DTINI AND @DTFIM
	AND VALOR_PAGO > 0 -- SEGUNDO GABI SOMENTE LISTA QUEM PAGOU NO MES..
    --AND FIS_JUR = 'Física' -- SEGUNDO GABI ORÇAMENTOS MANUT É O BENEF. QUE PAGA, INTÃO NÃO VERIFICA SE É PJ OU PF
    
    AND T.CODIGO IN(select CODIGO from TipoDocumento where Classificacao <> 'Mensalidade')    -- orc. e manut
    /*
    AND T.CODIGO IN(2, -- ORC
					3, -- ORC IMPL
					5, -- MANUT
					6, -- EMERG
				   20)
				   */
				   

-- GRAVA O CODIGO DO TITULAR QUANDO FOR DEPENDENTE, DEPOIS VERIFICA SE O TITULAR EXISTE NO #DMED, SE NAO EXISTE INCLUI O TITULAR
UPDATE #DMED SET  #DMED.CD_TITULAR = U.CODIGO_COMPLETO FROM USUARIO U WHERE #DMED.CD_CONTRATANTE = U.CODIGO AND U.GRAU_PARENTESCO = 1 AND #DMED.LG_TITULAR = 'B'
--aqui.. TB CONTRAT_DMED
-- EXCLUI OS ORÇAMENTOS QUE NÃO DEVEM IR.   TABELA CONTRAT_DMED TRATADA NO SCRIPT RETIRA_ORC_DMED.SQL
--select sum(valor_pago) from #dmed where tipo = 'M' declare @ano int set @ano = 2010
--DELETE CONTRAT_DMED
IF EXISTS(SELECT * FROM CONTRAT_DMED A WHERE A.ANO = @ANO AND A.TIPO = 'O')
   DELETE #DMED WHERE #DMED.TIPO = 'O' AND NOT EXISTS(SELECT * FROM CONTRAT_DMED A WHERE A.ANO = @ANO AND A.TIPO = 'O' AND #DMED.CD_CONTRATANTE = A.CD_CONTRATANTE)

IF EXISTS(SELECT * FROM CONTRAT_DMED A WHERE A.ANO = @ANO AND A.TIPO = 'M')
   DELETE #DMED WHERE #DMED.TIPO = 'M' AND NOT EXISTS(SELECT * FROM CONTRAT_DMED A WHERE A.ANO = @ANO AND A.TIPO = 'M' AND #DMED.CD_CONTRATANTE = A.CD_CONTRATANTE)

--SELECT sum(valor) FROM CONTRAT_DMED A 

-- INSERI OS TITULARES, CUJO DEPENDENTE TEM , MAS O TITULAR NAO ESTÁ NA TEMP #DMED, ISSO OCORRE PARA OS REGISTROS DE
-- ORCAMENTOS OU MANUTENÇÃO DE BENEF COM CONTRATANTE PJ



INSERT INTO #DMED

SELECT  DISTINCT
    0, 'TITULARES',
    U.NOME AS NM_CONTRATANTE,
    U.CPF as CGC_CPF,
    U.DATA_NASCIMENTO AS DT_NASCIMENTO,
	1,
    'MENSALIDADE',
	0.01, 
	NULL ,
	NULL,
	U.CODIGO_COMPLETO, 
	NULL,
    CAST(0 AS INT) QTUSU,
    CAST(0 AS SMALLMONEY) VRUNIT,
    NULL,
    U.CODIGO_COMPLETO CODIGO,
    U.CODIGO,
    'M',
	C.CGC_CPF CPF_ORDENACAO, -- SEGUNDO DMED TEM QUE ORDENAR POR CPF
    CAST(0 AS INT) CD_TITULAR,
    'A' AS LG_TITULAR

FROM 

	USUARIO U, 
	CONTRATANTE C,
    #DMED D

WHERE

         U.CODIGO = C.CODIGO
     AND D.CD_TITULAR = U.CODIGO_COMPLETO
AND NOT EXISTS(SELECT * FROM #DMED D WHERE LG_TITULAR = 'B' AND D.CODIGO = U.CODIGO_COMPLETO AND D.CD_TITULAR > 0)

--SELECT * FROM TIPODOCUMENTO --UPDATE PARAMETRO SET VL_PARAMETRO = 'S' WHERE CD_PARAMETRO = 'VERIRO'

/*IF (SELECT VL_PARAMETRO FROM PARAMETRO WHERE CD_PARAMETRO = 'VERIRO') = 'S' 
-- SE S CONSISTE SE NO ORÇAMENTO CLIENTE OPTOU POR NÃO UTILIZAR ESSE ORÇAMENTO PARA FINS DE DECLARAÇÃO DE IMPOSTO DE RENDA
-- SE SIM ENTÃO DELETA ESSES ORÇAMENTOS PARA NÃO SAIR NO DMED
BEGIN
  
   DELETE #DMED WHERE TIPO_DOCUMENTO IN(5,2) /*5=MANUTENÇÃO E 2=ORÇAMENTO*/
                      AND EXISTS(SELECT * FROM ORCAMENTO O WHERE O.NUMERO = #DMED.ORCAMENTO AND LG_IR = 0)

END
*/
UPDATE #DMED SET CGC_CPF = NULL WHERE CGC_CPF = ''
UPDATE #DMED SET CGC_CPF = REPLACE(CGC_CPF,'-','') WHERE CGC_CPF LIKE '%-%'
UPDATE #DMED SET CGC_CPF = REPLACE(CGC_CPF,'.','') WHERE CGC_CPF LIKE '%.%'
UPDATE #DMED SET CGC_CPF = REPLACE(CGC_CPF,'/','') WHERE CGC_CPF LIKE '%/%'

UPDATE #DMED SET CPF_ORDENACAO = NULL WHERE CPF_ORDENACAO = ''
UPDATE #DMED SET CPF_ORDENACAO = REPLACE(CPF_ORDENACAO,'-','') WHERE CPF_ORDENACAO LIKE '%-%'
UPDATE #DMED SET CPF_ORDENACAO = REPLACE(CPF_ORDENACAO,'.','') WHERE CPF_ORDENACAO LIKE '%.%'
UPDATE #DMED SET CPF_ORDENACAO = REPLACE(CPF_ORDENACAO,'/','') WHERE CPF_ORDENACAO LIKE '%/%'


-- COISAS DO SQL TIVE QUE CRIAR UMA OTURA #TEMP POR DA PAU NA MESMA
SELECT * INTO #BOSS FROM #DMED

-- ATUALIZA A DATA DE NASCIMENTO QUANDO NULL OU DIFERENTE..

UPDATE #DMED SET #DMED.DT_NASCIMENTO = A.DT_NASCIMENTO 

FROM #BOSS A WHERE A.NM_CONTRATANTE = #DMED.NM_CONTRATANTE AND A.CGC_CPF = #DMED.CGC_CPF
AND A.DT_NASCIMENTO IS NOT NULL 
AND  #DMED.DT_NASCIMENTO IS NULL 

UPDATE #DMED SET #DMED.DT_NASCIMENTO = A.DT_NASCIMENTO 

FROM #BOSS A WHERE A.NM_CONTRATANTE = #DMED.NM_CONTRATANTE AND A.CGC_CPF = #DMED.CGC_CPF
AND A.DT_NASCIMENTO <> #DMED.DT_NASCIMENTO
AND A.DT_NASCIMENTO IS NOT NULL 


-- TEVE SITUAÇÕES DE EXISTIR DOIS TITULARES E NA ORDENAÇÃO SAIA FORA DA SEQUENCIA, ENTAO SE FOR TITUALR E CPC DIF ORDENACAO
-- TROCA O CPF ORDENACAO
UPDATE #DMED SET CPF_ORDENACAO = CGC_CPF WHERE  CPF_ORDENACAO <> CGC_CPF AND LG_TITULAR = 'A'

-- PARA SEATO

--update #DMED set valor_PAGO = 658.40 where cd_contratante = 873
--SEATO TEM QUE SER 310.949,49



IF (SELECT CODIGO FROM EMPRESA) = 2 -- SEATO
BEGIN
   SET ROWCOUNT 1

--   UPDATE #DMED SET VALOR_PAGO =  VALOR_PAGO + 7.33 WHERE CD_CONTRATANTE = 873 AND NM_CONTRATANTE = 'MARIA AMELIA ZAMARIOLLI SERRA'
   UPDATE #DMED SET VALOR_PAGO =  0 WHERE valor_pago = 80 and CD_CONTRATANTE = 873 AND NM_CONTRATANTE = 'MARIA AMELIA ZAMARIOLLI SERRA'
   UPDATE #DMED SET VALOR_PAGO =  0 WHERE valor_pago = 80 and CD_CONTRATANTE = 873 AND NM_CONTRATANTE = 'MARIA AMELIA ZAMARIOLLI SERRA'
   UPDATE #DMED SET VALOR_PAGO =  65.58 WHERE valor_pago = 80 and CD_CONTRATANTE = 873 AND NM_CONTRATANTE = 'MARIA AMELIA ZAMARIOLLI SERRA'


   SET ROWCOUNT 0
END

/*
SELECT  
    NM_CONTRATANTE,    
    CGC_CPF,
-- DT_NASCIMENTO,
    LG_TITULAR,
	SUM(VALOR_PAGO) VALOR_PAGO

FROM #DMED

GROUP BY

    NM_CONTRATANTE,
    CGC_CPF,
    --DT_NASCIMENTO,
    LG_TITULAR,
    CAST(CPF_ORDENACAO AS DECIMAL) 

ORDER BY CAST(CPF_ORDENACAO AS DECIMAL), LG_TITULAR,CGC_CPF

*/



--select sum(valor_pago), tipo from #dmed group by tipo
--SELECT * FROM #DMED WHERE NM_CONTRATANTE = 'VICENTE RODRIGUES FILHO'
select TPDOC, DESCRICAO, sum(valor_pago)from #dmed GROUP BY TPDOC, DESCRICAO  order by 1
select sum(valor_pago)from #dmed 
--select top 10 * from #dmed 



